<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver">
		</property>
		<property name="jdbcUrl"
			value="jdbc:mysql://127.0.0.1:3306/coursesitedb?useUnicode=true&amp;characterEncoding=UTF-8">
		</property>
		<property name="user" value="root"></property>
		<property name="password" value="pzx"></property>
		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="20" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="1" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="1" />
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="5000" />
		<property name="maxStatements" value="0" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout" value="false" />
	</bean>
	<!-- 配置hibernate的sessionfactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<!-- 以下用来列出Hibernate的持久化类 -->
			<list>
				<value>edu.fzu.softwareengineer.courseSite.domain.Question</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Reply</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Score</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Student</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Teacher</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Assignment</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.ExamInfo</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Resource</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Test</value>
				<value>edu.fzu.softwareengineer.courseSite.domain.Notice</value>
			</list>
		</property>
	</bean>

	<!-- DAO相关 -->
	<bean id="daoTemplate" abstract="true" p:sessionFactory-ref="sessionFactory"
		lazy-init="true" />
	<bean id="studentDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.StudentDaoImpl"
		parent="daoTemplate" />
	<bean id="teacherDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.TeacherDaoImpl"
		parent="daoTemplate" />
	<bean id="siteBBSDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.SiteBBSDaoImpl"
		parent="daoTemplate" />
	<bean id="scoreDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.ScoreDaoImpl"
		parent="daoTemplate" />
	<bean id="examInfoDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.ExamInfoDaoImpl"
		parent="daoTemplate" />
	<bean id="assignmentDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.AssignmentDaoImpl"
		parent="daoTemplate" />
	<bean id="resourceDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.ResourceDaoImpl"
		parent="daoTemplate" />
	<bean id="testDao" class="edu.fzu.softwareengineer.courseSite.daoImpl.TestDaoImpl"
		parent="daoTemplate" />
	<bean id="noticeDao"
		class="edu.fzu.softwareengineer.courseSite.daoImpl.NoticeDaoImpl"
		parent="daoTemplate" />
	<!-- Service相关 -->
	<bean id="studentService"
		class="edu.fzu.softwareengineer.courseSite.serviceImpl.StudentServiceImpl"
		lazy-init="true" p:studentDao-ref="studentDao" p:scoreDao-ref="scoreDao"
		p:examInfoDao-ref="examInfoDao" p:assignmentDao-ref="assignmentDao"
		p:resourceDao-ref="resourceDao" p:noticeDao-ref="noticeDao" />
	<bean id="teacherService"
		class="edu.fzu.softwareengineer.courseSite.serviceImpl.TeacherServiceImpl"
		lazy-init="true" p:teacherDao-ref="teacherDao" p:scoreDao-ref="scoreDao"
		p:examInfoDao-ref="examInfoDao" p:assignmentDao-ref="assignmentDao"
		p:resourceDao-ref="resourceDao" p:noticeDao-ref="noticeDao" />
	<bean id="siteBBSservice"
		class="edu.fzu.softwareengineer.courseSite.serviceImpl.SiteBBSserviceImpl"
		lazy-init="true" p:siteBBSDao-ref="siteBBSDao" p:resourceDao-ref="resourceDao" />
	<bean id="testService"
		class="edu.fzu.softwareengineer.courseSite.serviceImpl.TestServiceImpl"
		lazy-init="true" p:testDao-ref="testDao" />

	<!-- Action相关 -->
	<bean id="studentAction"
		class="edu.fzu.softwareengineer.courseSite.action.StudentAction"
		scope="prototype" p:studentService-ref="studentService"></bean>
	<bean id="teacherAction"
		class="edu.fzu.softwareengineer.courseSite.action.TeacherAction"
		scope="prototype" p:teacherService-ref="teacherService"
		p:studentService-ref="studentService"></bean>
	<bean id="resourceAction"
		class="edu.fzu.softwareengineer.courseSite.action.ResourceAction"
		scope="prototype" p:teacherService-ref="teacherService"
		p:studentService-ref="studentService"></bean>
	<bean id="testction" class="edu.fzu.softwareengineer.courseSite.action.TestAction"
		scope="prototype" p:testService-ref="testService"></bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" timeout="120" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* edu.fzu.softwareengineer.courseSite.service.*.*(..))" />
	</aop:config>
</beans>
	